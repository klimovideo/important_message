#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –±–æ—Ç–∞
"""

import sys
import os
from unittest.mock import Mock

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from models import UserPreferences, Storage
from bot import handle_message, monitor_command

class MockUpdate:
    """–ú–æ–∫ –¥–ª—è Update –æ–±—ä–µ–∫—Ç–∞"""
    def __init__(self, message_text="", user_id=123456, chat_type="private", 
                 is_forwarded=False, forward_chat_id=None, forward_chat_title=None,
                 is_reply=False, reply_command=None):
        self.effective_user = Mock()
        self.effective_user.id = user_id
        
        self.message = Mock()
        self.message.text = message_text
        self.message.chat = Mock()
        self.message.chat.type = chat_type
        self.message.chat.id = 123456
        self.message.chat.title = "Test Chat"
        self.message.message_id = 1
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ reply_to_message
        if is_reply and reply_command:
            self.message.reply_to_message = Mock()
            self.message.reply_to_message.text = reply_command
        else:
            self.message.reply_to_message = None
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ forward_origin
        if is_forwarded and forward_chat_id:
            self.message.forward_origin = Mock()
            self.message.forward_origin.chat = Mock()
            self.message.forward_origin.chat.id = forward_chat_id
            self.message.forward_origin.chat.title = forward_chat_title or "Test Channel"
            self.message.forward_origin.chat.type = "channel"
        else:
            self.message.forward_origin = None

class MockContext:
    """–ú–æ–∫ –¥–ª—è Context –æ–±—ä–µ–∫—Ç–∞"""
    def __init__(self):
        self.args = []
        self.bot = Mock()

def test_improved_monitoring_logic():
    """–¢–µ—Å—Ç —É–ª—É—á—à–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
    print("üîç –¢–µ—Å—Ç —É–ª—É—á—à–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞...")
    
    # –û—á–∏—â–∞–µ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
    Storage.users = {}
    
    # –¢–µ—Å—Ç 1: –ü–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –Ω–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    print("\nüìã –¢–µ—Å—Ç 1: –ü–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –Ω–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞")
    update1 = MockUpdate(
        message_text="–í–∞–∂–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ",
        is_forwarded=True,
        forward_chat_id=-1002575519761,
        forward_chat_title="–¢–µ—Å—Ç–æ–≤—ã–π"
    )
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É
    has_forward_origin = hasattr(update1.message, 'forward_origin') and update1.message.forward_origin
    print(f"  - –ï—Å—Ç—å forward_origin: {has_forward_origin}")
    
    if has_forward_origin:
        has_chat = hasattr(update1.message.forward_origin, 'chat')
        print(f"  - –ï—Å—Ç—å chat –≤ forward_origin: {has_chat}")
        
        if has_chat:
            chat = update1.message.forward_origin.chat
            print(f"  - ID —á–∞—Ç–∞: {chat.id}")
            print(f"  - –ù–∞–∑–≤–∞–Ω–∏–µ —á–∞—Ç–∞: {chat.title}")
            print(f"  - –¢–∏–ø —á–∞—Ç–∞: {chat.type}")
    
    # –¢–µ—Å—Ç 2: –ö–æ–º–∞–Ω–¥–∞ /monitor –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    print("\nüìã –¢–µ—Å—Ç 2: –ö–æ–º–∞–Ω–¥–∞ /monitor –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
    update2 = MockUpdate(
        message_text="/monitor",
        is_reply=True,
        reply_command="/monitor"
    )
    
    has_reply = update2.message.reply_to_message is not None
    print(f"  - –ï—Å—Ç—å reply_to_message: {has_reply}")
    
    if has_reply:
        has_command = update2.message.reply_to_message.text.startswith('/')
        print(f"  - Reply —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–º–∞–Ω–¥—É: {has_command}")
    
    # –¢–µ—Å—Ç 3: –ö–æ–º–∞–Ω–¥–∞ /monitor –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ
    print("\nüìã –¢–µ—Å—Ç 3: –ö–æ–º–∞–Ω–¥–∞ /monitor –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ")
    update3 = MockUpdate(
        message_text="/monitor",
        chat_type="private"
    )
    
    is_command = update3.message.text.startswith('/')
    is_private = update3.message.chat.type == "private"
    print(f"  - –≠—Ç–æ –∫–æ–º–∞–Ω–¥–∞: {is_command}")
    print(f"  - –õ–∏—á–Ω—ã–π —á–∞—Ç: {is_private}")
    
    print("\n‚úÖ –¢–µ—Å—Ç —É–ª—É—á—à–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω")

def test_automatic_monitoring_offer():
    """–¢–µ—Å—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
    print("\nüîç –¢–µ—Å—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞...")
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user = Storage.get_user(123456)
    print(f"  - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: {user.user_id}")
    print(f"  - –ú–æ–Ω–∏—Ç–æ—Ä–∏–º—ã–µ –∫–∞–Ω–∞–ª—ã: {len(user.monitored_channels)}")
    print(f"  - –ú–æ–Ω–∏—Ç–æ—Ä–∏–º—ã–µ —á–∞—Ç—ã: {len(user.monitored_chats)}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    test_chat_id = -1002575519761
    is_channel = True
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç—Å—è –ª–∏ —É–∂–µ
    is_already_monitored = False
    if is_channel:
        is_already_monitored = test_chat_id in user.monitored_channels
    else:
        is_already_monitored = test_chat_id in user.monitored_chats
    
    print(f"  - –ö–∞–Ω–∞–ª —É–∂–µ –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç—Å—è: {is_already_monitored}")
    
    if not is_already_monitored:
        print("  - –ë–æ—Ç –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –¥–æ–±–∞–≤–∏—Ç—å –≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥")
        print("  - –î–æ–ª–∂–Ω—ã –ø–æ—è–≤–∏—Ç—å—Å—è –∫–Ω–æ–ø–∫–∏ '‚úÖ –î–æ–±–∞–≤–∏—Ç—å –≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥' –∏ '‚ùå –ù–µ –¥–æ–±–∞–≤–ª—è—Ç—å'")
    
    print("\n‚úÖ –¢–µ—Å—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω")

def test_callback_data_handling():
    """–¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback_data"""
    print("\nüîç –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback_data...")
    
    # –¢–µ—Å—Ç callback_data –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    test_callback = "add_monitoring_-1002575519761_channel"
    print(f"  - –¢–µ—Å—Ç–æ–≤—ã–π callback: {test_callback}")
    
    # –ü–∞—Ä—Å–∏–º callback_data
    parts = test_callback.split("_")
    if len(parts) >= 4:
        chat_id = int(parts[2])
        chat_type = parts[3]
        print(f"  - ID —á–∞—Ç–∞: {chat_id}")
        print(f"  - –¢–∏–ø: {chat_type}")
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
        user = Storage.get_user(123456)
        if chat_type == "channel":
            user.monitored_channels.add(chat_id)
            print(f"  - –ö–∞–Ω–∞–ª {chat_id} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥")
        else:
            user.monitored_chats.add(chat_id)
            print(f"  - –ß–∞—Ç {chat_id} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥")
        
        Storage.update_user(user)
        print(f"  - –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
    
    print("\n‚úÖ –¢–µ—Å—Ç callback_data –∑–∞–≤–µ—Ä—à–µ–Ω")

def test_comprehensive_functionality():
    """–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏"""
    print("\nüîç –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏...")
    
    # –û—á–∏—â–∞–µ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
    Storage.users = {}
    
    print("üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:")
    print("‚úÖ 1. –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π")
    print("‚úÖ 2. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞")
    print("‚úÖ 3. –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /monitor –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ")
    print("‚úÖ 4. –û–±—Ä–∞–±–æ—Ç–∫–∞ callback_data –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞")
    print("‚úÖ 5. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    print("‚úÖ 6. –ê–Ω–∞–ª–∏–∑ –≤–∞–∂–Ω–æ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–π")
    print("‚úÖ 7. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤–∞–∂–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö")
    print("‚úÖ 8. –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é")
    
    print("\nüìã –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:")
    print("‚úÖ 1. –ö–æ–º–∞–Ω–¥–∞ /monitor —Ç–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ")
    print("‚úÖ 2. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ")
    print("‚úÖ 3. –£–ª—É—á—à–µ–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤ –º–µ–Ω—é")
    print("‚úÖ 4. –ü–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏")
    print("‚úÖ 5. –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π")
    
    print("\n‚úÖ –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω")

if __name__ == "__main__":
    print("üöÄ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –±–æ—Ç–∞...\n")
    
    test_improved_monitoring_logic()
    test_automatic_monitoring_offer()
    test_callback_data_handling()
    test_comprehensive_functionality()
    
    print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    print("\nüìã –ò—Ç–æ–≥–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
    print("‚úÖ –ë–æ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ–Ω")
    print("‚úÖ –ü—Ä–æ–±–ª–µ–º–∞ —Å –∫–æ–º–∞–Ω–¥–æ–π /monitor –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞")
    print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞")
    print("‚úÖ –£–ª—É—á—à–µ–Ω–æ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é")
    print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ")
    print("‚úÖ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    
    print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
    print("1. –ü–µ—Ä–µ—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∫–∞–Ω–∞–ª–∞ –±–æ—Ç—É")
    print("2. –ù–∞–∂–º–∏—Ç–µ '‚úÖ –î–æ–±–∞–≤–∏—Ç—å –≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥'")
    print("3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /menu –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏")
    print("4. –ë–æ—Ç –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è") 